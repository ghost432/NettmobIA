import { NextFunction, Request, Response } from 'express';
declare const _default: {
    deleteDocumentStore: (req: Request, res: Response, next: NextFunction) => Promise<Response<any, Record<string, any>>>;
    createDocumentStore: (req: Request, res: Response, next: NextFunction) => Promise<Response<any, Record<string, any>>>;
    getAllDocumentStores: (req: Request, res: Response, next: NextFunction) => Promise<Response<any, Record<string, any>>>;
    deleteLoaderFromDocumentStore: (req: Request, res: Response, next: NextFunction) => Promise<Response<any, Record<string, any>>>;
    getDocumentStoreById: (req: Request, res: Response, next: NextFunction) => Promise<Response<any, Record<string, any>>>;
    getDocumentStoreFileChunks: (req: Request, res: Response, next: NextFunction) => Promise<Response<any, Record<string, any>>>;
    updateDocumentStore: (req: Request, res: Response, next: NextFunction) => Promise<Response<any, Record<string, any>>>;
    processLoader: (req: Request, res: Response, next: NextFunction) => Promise<Response<any, Record<string, any>>>;
    previewFileChunks: (req: Request, res: Response, next: NextFunction) => Promise<Response<any, Record<string, any>>>;
    getDocumentLoaders: (req: Request, res: Response, next: NextFunction) => Promise<Response<any, Record<string, any>>>;
    deleteDocumentStoreFileChunk: (req: Request, res: Response, next: NextFunction) => Promise<Response<any, Record<string, any>>>;
    editDocumentStoreFileChunk: (req: Request, res: Response, next: NextFunction) => Promise<Response<any, Record<string, any>>>;
    insertIntoVectorStore: (req: Request, res: Response, next: NextFunction) => Promise<Response<any, Record<string, any>>>;
    getEmbeddingProviders: (req: Request, res: Response, next: NextFunction) => Promise<Response<any, Record<string, any>>>;
    getVectorStoreProviders: (req: Request, res: Response, next: NextFunction) => Promise<Response<any, Record<string, any>>>;
    getRecordManagerProviders: (req: Request, res: Response, next: NextFunction) => Promise<Response<any, Record<string, any>>>;
    saveVectorStoreConfig: (req: Request, res: Response, next: NextFunction) => Promise<Response<any, Record<string, any>>>;
    queryVectorStore: (req: Request, res: Response, next: NextFunction) => Promise<Response<any, Record<string, any>>>;
    deleteVectorStoreFromStore: (req: Request, res: Response, next: NextFunction) => Promise<Response<any, Record<string, any>>>;
    updateVectorStoreConfigOnly: (req: Request, res: Response, next: NextFunction) => Promise<Response<any, Record<string, any>>>;
    upsertDocStoreMiddleware: (req: Request, res: Response, next: NextFunction) => Promise<Response<any, Record<string, any>>>;
    refreshDocStoreMiddleware: (req: Request, res: Response, next: NextFunction) => Promise<Response<any, Record<string, any>>>;
    saveProcessingLoader: (req: Request, res: Response, next: NextFunction) => Promise<Response<any, Record<string, any>>>;
    generateDocStoreToolDesc: (req: Request, res: Response, next: NextFunction) => Promise<Response<any, Record<string, any>>>;
    getDocStoreConfigs: (req: Request, res: Response, next: NextFunction) => Promise<Response<any, Record<string, any>>>;
};
export default _default;
